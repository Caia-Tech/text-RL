version: '3.8'

services:
  rl-learner:
    build: .
    container_name: textlib-rl-learner
    restart: unless-stopped

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '1'
          memory: 256M

    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true

    # Volumes for persistent data
    volumes:
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
      - ./models:/app/models:rw
      - /tmp:/tmp:rw

    # Environment variables
    environment:
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - TELEMETRY_ENDPOINT=http://metrics-collector:9090
      - MAX_EPISODES=10000
      - CHECKPOINT_INTERVAL=100

    # Network isolation
    networks:
      - rl-network

    # Health check
    healthcheck:
      test: ["CMD", "/app/rl-textlib-learner", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3

    depends_on:
      - metrics-collector

  metrics-collector:
    image: prom/prometheus:latest
    container_name: textlib-metrics
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - rl-network
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

networks:
  rl-network:
    driver: bridge

volumes:
  prometheus-data: